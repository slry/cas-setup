- name: Check if a certificate already exists
  block:
    - stat:
        path: "{{ nginx_directory }}/certbot/conf/live/{{ domain }}/privkey.pem"
      become: true
      register: stat_privkey
    - stat:
        path: "{{ nginx_directory }}/certbot/conf/live/{{ domain }}/fullchain.pem"
      become: true
      register: stat_fullchain
    - stat:
        path: "{{ nginx_directory}}/.secrets/cloudflare.ini"
      become: true
      register: stat_cloudflare


- name: Create a new certificate
  block:
    - name: Update nginx configuration with /.well-known/acme-challenge/
      become: true
      template:
        src: nginx.conf.j2
        dest: "{{ nginx_directory }}/nginx.conf"
        owner: root
        mode: '0770'
      vars:
        certbot_step: 1

    - name: Restart nginx
      become: true
      community.docker.docker_compose_v2:
        project_src: "{{ nginx_directory }}"
        state: restarted

    - name: Create Cloudflare credentials file
      when: dns_cloudflare_api_token != "" and not stat_cloudflare.stat.exists
      become: true
      template:
        src: cloudflare.ini.j2
        dest: "{{ nginx_directory }}/.secrets/cloudflare.ini"
        owner: root
        mode: '0770'

    - name: Request a certificate
      when: email != "" and dns_cloudflare_api_token == ""
      become: true
      command: docker compose -f "{{ nginx_directory }}/docker-compose.yml" run --rm  certbot certonly --webroot --webroot-path /var/www/certbot/ --non-interactive --email {{ email }} -d {{ domain }} --agree-tos

    - name: Request a certificate (without email)
      when: email == "" and dns_cloudflare_api_token == ""
      become: true
      command: docker compose -f "{{ nginx_directory }}/docker-compose.yml" run --rm  certbot certonly --webroot --webroot-path /var/www/certbot/ --non-interactive --register-unsafely-without-email -d {{ domain }} --agree-tos

    - name: Request a certificate (Cloudflare)
      when: email != "" and dns_cloudflare_api_token != "" and not stat_cloudflare.stat.exists
      become: true
      command: docker compose -f "{{ nginx_directory }}/docker-compose.yml" run --rm  certbot-cloudflare certonly --non-interactive --email {{ email }} -d {{ domain }} -d *.{{ domain }} --agree-tos --dns-cloudflare --dns-cloudflare-credentials /etc/letsencrypt/.secrets/cloudflare.ini

  when: not stat_privkey.stat.exists or not stat_fullchain.stat.exists

- name: Add certificates to nginx
  block:
    - name: Update nginx configuration with the certificates
      become: true
      template:
        src: nginx.conf.j2
        dest: "{{ nginx_directory }}/nginx.conf"
        owner: root
        mode: '0770'
      vars:
        certbot_step: 2

    - name: Restart nginx
      become: true
      community.docker.docker_compose_v2:
        project_src: "{{ nginx_directory }}"
        state: restarted

    - name: Renew cron
      become: true
      ansible.builtin.cron:
        name: "Renew CAS Let's Encrypt"
        minute: "0"
        hour: "0"
        day: "1"
        job: "docker compose -f '{{ nginx_directory }}/docker-compose.yml' run --rm  certbot renew; docker compose -f '{{ nginx_directory }}//docker-compose.yml' restart"
